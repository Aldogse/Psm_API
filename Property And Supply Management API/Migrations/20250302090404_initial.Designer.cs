// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Property_And_Supply_Management_API.Data;

#nullable disable

namespace PropertyAndSupplyManagementAPI.Migrations
{
    [DbContext(typeof(PSMdbContext))]
    [Migration("20250302090404_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Model.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("department_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("departmental_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            departmentname = "OR",
                            departmentalemail = "or@gmail.com"
                        },
                        new
                        {
                            Id = 2,
                            departmentname = "Cardiology",
                            departmentalemail = "cardiology@gmail.com"
                        },
                        new
                        {
                            Id = 3,
                            departmentname = "Neurology ",
                            departmentalemail = "neurology@gmail.com"
                        },
                        new
                        {
                            Id = 4,
                            departmentname = "Orthopedics",
                            departmentalemail = "orthopedics@gmail.com"
                        },
                        new
                        {
                            Id = 5,
                            departmentname = "OB/GYN",
                            departmentalemail = "obgyn@gmail.com"
                        },
                        new
                        {
                            Id = 6,
                            departmentname = "Radiology ",
                            departmentalemail = "radiology@gmail.com"
                        },
                        new
                        {
                            Id = 7,
                            departmentname = "Oncology",
                            departmentalemail = "oncology@email.com"
                        },
                        new
                        {
                            Id = 8,
                            departmentname = "Anesthesiology ",
                            departmentalemail = "ezekiel.lamoste@gmail.com"
                        },
                        new
                        {
                            Id = 9,
                            departmentname = "Intensive Care Unit",
                            departmentalemail = "icu@gmail.com"
                        },
                        new
                        {
                            Id = 10,
                            departmentname = "General Surgery ",
                            departmentalemail = "generalsurgery@gmail.com"
                        },
                        new
                        {
                            Id = 11,
                            departmentname = "Nephrology",
                            departmentalemail = "nephrology@gmail.com"
                        },
                        new
                        {
                            Id = 12,
                            departmentname = "Psychiatry",
                            departmentalemail = "psychiatry@gmail.com"
                        },
                        new
                        {
                            Id = 13,
                            departmentname = "ER",
                            departmentalemail = "er@gmail.com"
                        });
                });

            modelBuilder.Entity("Model.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("date_added")
                        .HasColumnType("datetime2");

                    b.Property<int?>("department_id")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("item_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("maintenance_date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("department_id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Model.Item", b =>
                {
                    b.HasOne("Model.Department", "Department")
                        .WithMany("Items")
                        .HasForeignKey("department_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Model.Department", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
